import { COOKIE_SEP, encode, decode, toString, isString, isNumber } from './helpers';
export var DEFAULT_CONFIG = {};
var Cookie = (function () {
    function Cookie() {
    }
    Cookie.getAll = function () {
        return document.cookie
            .split(COOKIE_SEP)
            .filter(function (value) { return !!value; })
            .map(function (items) { return items.split('='); })
            .reduce(function (res, _a) {
            var key = _a[0], value = _a[1];
            res[decode(key)] = decode(value);
            return res;
        }, {});
    };
    Cookie.get = function (key) {
        return this.getAll()[key];
    };
    Cookie.set = function (key, value, config) {
        if (config === void 0) { config = DEFAULT_CONFIG; }
        var secure = config.secure, maxAge = config.maxAge, domain = config.domain, path = config.path, expires = config.expires;
        var cookie = encode(key) + "=" + encode(value);
        if (secure)
            cookie += ';secure';
        if (isNumber(maxAge) && !isNaN(maxAge))
            cookie += ";max-age=" + maxAge;
        if (domain)
            cookie += ";domain=" + domain;
        if (path)
            cookie += ";path=" + path;
        if (expires)
            cookie += ";expires=" + (isString(expires) ? expires : toString(expires));
        document.cookie = cookie;
    };
    Cookie.remove = function (key) {
        this.set(key, this.get(key), { maxAge: 0 });
    };
    return Cookie;
}());
export { Cookie };
//# sourceMappingURL=Cookie.js.map