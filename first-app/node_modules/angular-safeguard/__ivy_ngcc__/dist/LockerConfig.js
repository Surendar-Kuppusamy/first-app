import { Inject, Injectable, InjectionToken } from '@angular/core';
import { isNil } from './helpers';
import * as ɵngcc0 from '@angular/core';
export var LOCKER_USER_CONFIG = new InjectionToken('LOCKER_USER_CONFIG');
var DEFAULT_SEPERATOR = ':';
var DEFAULT_NAMESPACE = '';
var DEFAULT_FALLBACK = "session" /* SESSION */;
export var USER_CONFIG_PROVIDER = {
    provide: LOCKER_USER_CONFIG,
    useValue: {
        namespaceSeparator: DEFAULT_SEPERATOR,
        driverFallback: DEFAULT_FALLBACK,
        driverNamespace: DEFAULT_NAMESPACE
    }
};
var configNotNil = function (config, prop) { return !config || isNil(config[prop]); };
var ɵ0 = configNotNil;
var LockerConfig = (function () {
    function LockerConfig(config) {
        this.driverNamespace = configNotNil(config, 'driverNamespace') ? DEFAULT_NAMESPACE : config.driverNamespace;
        this.driverFallback = configNotNil(config, 'driverFallback') ? DEFAULT_FALLBACK : config.driverFallback;
        this.namespaceSeparator = configNotNil(config, 'namespaceSeparator') ? DEFAULT_SEPERATOR : config.namespaceSeparator;
    }
    /** @nocollapse */
    LockerConfig.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [LOCKER_USER_CONFIG,] },] },
    ]; };
LockerConfig.ɵfac = function LockerConfig_Factory(t) { return new (t || LockerConfig)(ɵngcc0.ɵɵinject(LOCKER_USER_CONFIG)); };
LockerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LockerConfig, factory: function (t) { return LockerConfig.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LockerConfig, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [LOCKER_USER_CONFIG]
            }] }]; }, null); })();
    return LockerConfig;
}());
export { LockerConfig };
export { ɵ0 };

//# sourceMappingURL=LockerConfig.js.map