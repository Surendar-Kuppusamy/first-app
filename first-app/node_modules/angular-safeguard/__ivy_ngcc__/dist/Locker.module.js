import { NgModule } from '@angular/core';
import { Locker } from './Locker';
import { LockerConfig, USER_CONFIG_PROVIDER, LOCKER_USER_CONFIG } from './LockerConfig';
import { DRIVER_TYPES_PROVIDERS } from './DriverTypes';
import * as ɵngcc0 from '@angular/core';
var LockerModule = (function () {
    function LockerModule() {
    }
    LockerModule.withConfig = function (userConfig) {
        return {
            ngModule: LockerModule,
            providers: [Locker, LockerConfig].concat(DRIVER_TYPES_PROVIDERS, [{
                    provide: LOCKER_USER_CONFIG,
                    useValue: userConfig
                }])
        };
    };
    /** @nocollapse */
    LockerModule.ctorParameters = function () { return []; };
LockerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LockerModule });
LockerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LockerModule_Factory(t) { return new (t || LockerModule)(); }, providers: [
        Locker,
        LockerConfig
    ].concat(DRIVER_TYPES_PROVIDERS, [
        USER_CONFIG_PROVIDER
    ]) });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LockerModule, [{
        type: NgModule,
        args: [{
                providers: [
                    Locker,
                    LockerConfig
                ].concat(DRIVER_TYPES_PROVIDERS, [
                    USER_CONFIG_PROVIDER
                ])
            }]
    }], function () { return []; }, null); })();
    return LockerModule;
}());
export { LockerModule };

//# sourceMappingURL=Locker.module.js.map