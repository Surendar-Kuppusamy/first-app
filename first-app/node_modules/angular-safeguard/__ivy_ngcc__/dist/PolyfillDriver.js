var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Driver } from './Driver';
import { serializeDataToString, convertFromJSON, isExpired } from './helpers';
// This driver is a special driver to handle expiry and other options (similar to cookies)
// stores data as {data: myData, config: {expiry: new Date()}}
var 
// This driver is a special driver to handle expiry and other options (similar to cookies)
// stores data as {data: myData, config: {expiry: new Date()}}
PollyfillDriver = (function (_super) {
    __extends(PollyfillDriver, _super);
    function PollyfillDriver(storage) {
        var _this = _super.call(this, storage) || this;
        _this.storage = storage;
        return _this;
    }
    PollyfillDriver.prototype.set = function (key, data, config) {
        this.storage.setItem(key, serializeDataToString({ data: data, config: config }));
    };
    PollyfillDriver.prototype.get = function (key) {
        this._checkExpiry(key);
        var data = convertFromJSON(this.storage.getItem(key));
        return (data && data.hasOwnProperty('data')) ? data.data : data;
    };
    PollyfillDriver.prototype.has = function (key) {
        this._checkExpiry(key);
        var storage = this.storage;
        return storage.hasItem ? storage.hasItem(key) : this.storage.hasOwnProperty(key);
    };
    PollyfillDriver.prototype.key = function (index) {
        if (index === void 0) { index = 0; }
        var key = this.storage.key(index);
        this._checkExpiry(key);
        return this.storage.key(index);
    };
    PollyfillDriver.prototype._checkExpiry = function (key) {
        var data = convertFromJSON(this.storage.getItem(key));
        if (data && isExpired(data))
            this.remove(key);
    };
    return PollyfillDriver;
}(Driver));
// This driver is a special driver to handle expiry and other options (similar to cookies)
// stores data as {data: myData, config: {expiry: new Date()}}
export { PollyfillDriver };
//# sourceMappingURL=PolyfillDriver.js.map